!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ADMIN_LOGIN	checker.py	/^ADMIN_LOGIN         = "admin"$/;"	v
ADMIN_PASSWORD	checker.py	/^    ADMIN_PASSWORD = m.hexdigest()[:9][::-1]$/;"	v	class:Checker
ADMIN_PASSWORD	checker.py	/^ADMIN_PASSWORD      = ""$/;"	v
BUFFER_SIZE	hellocator.h	5;"	d
Checker	checker.py	/^class Checker(object):$/;"	c
ClientHandler	hellocator.cpp	/^ClientHandler:: ClientHandler(int client) {$/;"	f	class:ClientHandler
ClientHandler	hellocator.cpp	/^class ClientHandler {$/;"	c	file:
EXITCODE_CONNECTION	checker.py	/^EXITCODE_CONNECTION = 1$/;"	v
EXITCODE_FUNCLACK	checker.py	/^EXITCODE_FUNCLACK   = 9$/;"	v
EXITCODE_INVARG	checker.py	/^EXITCODE_INVARG     = 3$/;"	v
EXITCODE_OK	checker.py	/^EXITCODE_OK         = 0$/;"	v
EXITCODE_WRONGFLAG	checker.py	/^EXITCODE_WRONGFLAG  = 5$/;"	v
LOGIN_MAX_LEN	hellocator.h	3;"	d
MAX_FREE_SPACE	hellocator.h	/^const uint64_t MAX_FREE_SPACE = 10 * 1024 * 1024;$/;"	v
PASSWORD_MAX_LEN	hellocator.h	4;"	d
RECV_SIZE	checker.py	/^RECV_SIZE           = 8192$/;"	v
TEST_LOGIN	checker.py	/^TEST_LOGIN          = "test"$/;"	v
TEST_PASSWORD	checker.py	/^TEST_PASSWORD       = "passwtest"$/;"	v
WELCOME_FILE	hellocator.h	1;"	d
WELCOME_LEN	hellocator.h	2;"	d
__del__	checker.py	/^    def __del__(self):$/;"	m	class:Checker	file:
__init__	checker.py	/^    def __init__(self, host, port):$/;"	m	class:Checker
_auth	hellocator.cpp	/^        int _auth;$/;"	m	class:ClientHandler	file:
_client_db	hellocator.cpp	/^        sqlite3 *_client_db;$/;"	m	class:ClientHandler	file:
_db	hellocator.cpp	/^        sqlite3 *_db;$/;"	m	class:ClientHandler	file:
_free_space	hellocator.cpp	/^        uint64_t _free_space;$/;"	m	class:ClientHandler	file:
_last_download_file	hellocator.cpp	/^        char _last_download_file[20];$/;"	m	class:ClientHandler	file:
_login	hellocator.cpp	/^        std::string _login;$/;"	m	class:ClientHandler	file:
_occupied_space	hellocator.cpp	/^        uint64_t _occupied_space;$/;"	m	class:ClientHandler	file:
_sfd	hellocator.cpp	/^        int _sfd;$/;"	m	class:ClientHandler	file:
allocate	hellocator.cpp	/^ClientHandler:: allocate() {$/;"	f	class:ClientHandler
auth_step	help.c	/^int auth_step(char *login, char *password, char *result) {$/;"	f
c	checker.py	/^    c = Checker(host, 31337)$/;"	v	class:Checker
callback_auth	help.c	/^static int callback_auth(void *result, int argc, char **argv, char **azColName){$/;"	f	file:
callback_download	hellocator.cpp	/^static int callback_download(void *resvector, int argc, char **argv, char **azColName){$/;"	f	file:
callback_info	hellocator.cpp	/^static int callback_info(void *resvector, int argc, char **argv, char **azColName) {$/;"	f	file:
callback_list	hellocator.cpp	/^static int callback_list(void *resvector, int argc, char **argv, char **azColName){$/;"	f	file:
callback_login	hellocator.cpp	/^static int callback_login(void *resvector, int argc, char **argv, char **azColName){$/;"	f	file:
callback_select	hellocator.cpp	/^static int callback_select(void *is_exist, int argc, char **argv, char **azColName){$/;"	f	file:
check_credentials	hellocator.cpp	/^ClientHandler:: check_credentials(std::string &login, std::string &pass, std::string &result) {$/;"	f	class:ClientHandler
check_step_second	help.c	/^check_step_second(char *login, char *password) {$/;"	f
command	checker.py	/^    command = sys.argv[1].upper()$/;"	v	class:Checker
create_users_database	help.c	/^int create_users_database(const char *login)$/;"	f
download	hellocator.cpp	/^ClientHandler:: download() {$/;"	f	class:ClientHandler
enter_logpass	hellocator.cpp	/^ClientHandler::enter_logpass(std::string &log, std::string &pass) {$/;"	f	class:ClientHandler
get	checker.py	/^    def get(self, flag_id, flag):$/;"	m	class:Checker
get_responce	hellocator.cpp	/^ClientHandler::get_responce() {$/;"	f	class:ClientHandler
handler	hellocator.cpp	/^handler(void *clfd) {$/;"	f
hellhash	help.c	/^char *hellhash(const char *login, const char *pass) {$/;"	f
help	hellocator.cpp	/^ClientHandler:: help() {$/;"	f	class:ClientHandler
host	checker.py	/^    host = sys.argv[2]$/;"	v	class:Checker
list_files	hellocator.cpp	/^ClientHandler:: list_files()$/;"	f	class:ClientHandler
list_users	hellocator.cpp	/^ClientHandler::list_users() {$/;"	f	class:ClientHandler
login	hellocator.cpp	/^ClientHandler:: login() {$/;"	f	class:ClientHandler
m	checker.py	/^    m = md5.new()$/;"	v	class:Checker
main	hellocator.cpp	/^int main()$/;"	f
put	checker.py	/^    def put(self, flag_id, flag):$/;"	m	class:Checker
recv	checker.py	/^    def recv(self, c=0):$/;"	m	class:Checker
register_client	hellocator.cpp	/^ClientHandler:: register_client() {$/;"	f	class:ClientHandler
send	checker.py	/^    def send(self, msg, wait_c=0):$/;"	m	class:Checker
send_input_line	hellocator.cpp	/^ClientHandler:: send_input_line() {$/;"	f	class:ClientHandler
send_msg	hellocator.cpp	/^ClientHandler::send_msg(const char *msg) {$/;"	f	class:ClientHandler
send_msg	hellocator.cpp	/^ClientHandler::send_msg(std::string msg) {$/;"	f	class:ClientHandler
send_welcome	hellocator.cpp	/^ClientHandler::send_welcome() {$/;"	f	class:ClientHandler
sock_desc	checker.py	/^    sock_desc = None$/;"	v	class:Checker
space_info	hellocator.cpp	/^void ClientHandler:: space_info() {$/;"	f	class:ClientHandler
sqlite_init	help.c	/^int sqlite_init()$/;"	f
test	checker.py	/^    def test(self):$/;"	m	class:Checker
upload	hellocator.cpp	/^ClientHandler:: upload() {$/;"	f	class:ClientHandler
~ClientHandler	hellocator.cpp	/^ClientHandler:: ~ClientHandler() {$/;"	f	class:ClientHandler
